{"version":3,"sources":["components/Home.js","components/Cases.js","components/Charts.js","components/Information.js","components/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","appBar","width","marginLeft","drawer","flexShrink","drawerPaper","backgroundColor","toolbar","mixins","content","flexGrow","padding","spacing","height","Home","classes","className","Typography","paragraph","variant","style","color","margin","fontWeight","icon","faLaptopHouse","size","notchedOutline","borderColor","label","focus","outlinedInput","table","minWidth","Alert","props","elevation","Cases","useState","allData","setAllData","allLoaded","setAllLoaded","country","setCountry","countryData","setCountryData","loading","setLoading","cache","setCache","open","setOpen","openError","setOpenError","openWarning","setOpenWarning","openLoad","setOpenLoad","snackCountry","setSnackCountry","useEffect","fetch","then","response","json","data","catch","err","undefined","prev","toLowerCase","handleClose","event","reason","marginBottom","faGlobeAmericas","TableContainer","component","Paper","Table","border","aria-label","TableHead","TableRow","TableCell","align","fontSize","TableBody","CircularProgress","disableShrink","faFlag","noValidate","autoComplete","onSubmit","preventDefault","TextField","id","onChange","search","target","value","InputLabelProps","focused","InputProps","Button","type","endIcon","Snackbar","autoHideDuration","onClose","severity","toUpperCase","marginTop","Charts","legend","setLegend","openCountry","setOpenCountry","loaded","setLoaded","faChartLine","disabled","Object","keys","length","Fragment","strokeDasharray","tick","fill","dataKey","verticalAlign","formatter","entry","index","stroke","activeDot","r","Information","faViruses","faHandsWash","faUserMd","href","dividerColor","PermanentDrawerLeft","CssBaseline","AppBar","position","Toolbar","noWrap","faLungsVirus","Drawer","paper","anchor","Divider","List","to","textDecoration","ListItem","button","key","faHouseUser","marginRight","ListItemText","primary","faHospital","faChartBar","faShieldVirus","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.edc8cea5.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\n// Font-Awesome imports\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLaptopHouse} from '@fortawesome/free-solid-svg-icons';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#424242',\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: '#282c34',\n    padding: theme.spacing(3),\n    height: '100%'\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography paragraph variant='h3' style={{color: 'orange', margin: 'auto', fontWeight: 'bold'}}>\n          Welcome!\n          <FontAwesomeIcon icon={faLaptopHouse} size='1x' style={{ marginLeft: '20px' }}></FontAwesomeIcon>\n        </Typography>\n        <br></br>\n        <Typography paragraph variant='h5' style={{color: '#3399ff'}}>\n          From the navigation bar on the left, please select:\n        </Typography>\n        <Typography paragraph variant='h6' style={{color: '#B0C4DE'}}>\n          <b>Cases</b> - COVID-19 statistics worldwide or filtered by country\n        </Typography>\n        <Typography paragraph variant='h6' style={{color: '#B0C4DE'}}>\n          <b>Charts</b> - Visualized charts/graphs of COVID-19 data\n        </Typography>\n        <Typography paragraph variant='h6' style={{color: '#B0C4DE'}}>\n          <b>Information</b> - Resources and information regarding COVID-19\n        </Typography>\n      </main>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n// Font-Awesome imports\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlag } from '@fortawesome/free-solid-svg-icons';\nimport { faGlobeAmericas } from '@fortawesome/free-solid-svg-icons';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#424242',\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: '#282c34',\n    padding: theme.spacing(3),\n    height: '100%'\n  },\n  notchedOutline: {\n    borderColor: '#3399ff'\n  },\n  label: {\n    color: '#3399ff',\n    \"&.Mui-focused\": {\n      color: \"#3399ff\"\n    }\n  },\n  focus: {\n    borderColor: '#3399ff',\n  },\n  outlinedInput: {\n    '&$focus $notchedOutline': {\n      borderColor: '#3399ff',\n      color: '#3399ff'\n    },\n    \"&:hover:not($disabled):not($focused):not($error) $notchedOutline\": {\n      borderColor: '#3399ff'\n    }\n  },\n  table: {\n    minWidth: 650,\n    backgroundColor: '#282c34',\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Cases() {\n  const classes = useStyles();\n\n  // worldwide hooks\n  const [allData, setAllData] = useState({})\n  const [allLoaded, setAllLoaded] = useState(false);\n\n  // country hooks\n  const [country, setCountry] = useState('world');\n  const [countryData, setCountryData] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  // caching data to component\n  const [cache, setCache] = useState({})\n\n  // snackbar hooks\n  const [open, setOpen] = useState(false);\n  const [openError, setOpenError] = useState(false);\n  const [openWarning, setOpenWarning] = useState(false);\n  const [openLoad, setOpenLoad] = useState(false);\n  const [snackCountry, setSnackCountry] = useState('world');\n\n  // initial render\n  useEffect(() => {\n    setOpen(false);\n    setOpenError(false);\n    setOpenWarning(false);\n    setOpenLoad(true);\n    setLoading(true);\n    fetch(`/all`)\n      .then(response => response.json())\n      .then(data => {\n        setAllData(data);\n        setAllLoaded(true);\n      })\n      .catch(err => {\n        // console.log('Error fetching data');\n      });\n    fetch(`/country/${country}`)\n      .then(response => response.json())\n      .then(data => {\n        setOpenLoad(false);\n        // if country data exists, set all values\n        if (!(data === undefined || data === null)) {\n          setCountryData(data);\n          data['cases'] === undefined ? setOpenWarning(true) : setOpen(true);\n          setCache(prev => {\n            return {...prev, [country.toLowerCase()]:data};\n          });\n          setLoading(false);\n        } else {\n          setOpenError(true);\n          setLoading(false);\n        }\n      })\n      .catch(err => {\n        setOpenLoad(false);\n        setOpenError(true);\n        setLoading(false);\n        // console.log('Error fetching data');\n      });\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // console.log(country);\n    // console.log(cache);\n    if (cache[country.toLowerCase()] !== undefined) {\n      setOpen(false);\n      setOpenError(false);\n      setOpenWarning(false);\n      setOpenLoad(false);\n      cache[country.toLowerCase()]['cases'] === undefined ? setOpenWarning(true) : setOpen(true);\n      setSnackCountry(country);\n      setCountryData(cache[country.toLowerCase()]);\n    } else {\n      setOpen(false);\n      setOpenError(false);\n      setOpenWarning(false);\n      setOpenLoad(true);\n      setLoading(true);\n      fetch(`/country/${country}`)\n        .then(response => response.json())\n        .then(data => {\n          setOpenLoad(false);\n          // if country data exists, set all values\n          if (!(data === undefined || data === null)) {\n            setCountryData(data);\n            setSnackCountry(country);\n            data['cases'] === undefined ? setOpenWarning(true) : setOpen(true);\n            setCache(prev => {\n              return {...prev, [country.toLowerCase()]:data};\n            });\n            setLoading(false);\n          } else {\n            setOpenError(true);\n            setLoading(false);\n          }\n        })\n        .catch(err => {\n          setOpenLoad(false);\n          setOpenError(true);\n          setLoading(false);\n          // console.log('Error fetching data');\n        });\n    }\n  };\n\n  const handleChange = (event) => {\n    let search = event.target.value.toLowerCase();\n    if (search === '') {\n      // set default search to world if empty string search\n      search = 'world';\n    }\n    setCountry(search); // setCountry is asnyc, triggers re-render, use useEffect for render changes\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n    setOpenError(false);\n    setOpenWarning(false);\n    setOpenLoad(false);\n  };\n\n  return (\n    <div>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography paragraph variant='h4' style={{color: 'orange', fontWeight: 'bold', marginBottom: '-5px'}}>\n            Worldwide Statistics\n            <FontAwesomeIcon icon={faGlobeAmericas} size='1x' style={{ marginLeft: '20px' }}></FontAwesomeIcon>\n        </Typography>\n        <br></br>\n        <TableContainer component={Paper} style={{borderColor:'#B0C4DE'}}>\n          <Table style={{border: '1px solid #B0C4DE'}} className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align='center' style={{color:'#B0C4DE', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  Cases\n                </TableCell>\n                <TableCell align='center' style={{color:'#B0C4DE', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  Deaths\n                </TableCell>\n                <TableCell align='center' style={{color:'#B0C4DE', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  Recovered\n                </TableCell>\n                <TableCell align='center' style={{color:'#B0C4DE', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  Active\n                </TableCell>\n                <TableCell align='center' style={{color:'#B0C4DE', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  Countries Affected\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell align='center' style={{color:'#FFA500', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  {allLoaded ? allData['cases'] : <CircularProgress disableShrink color='secondary' />}\n                </TableCell>\n                <TableCell align='center' style={{color:'red', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  {allLoaded ? allData['deaths'] : <CircularProgress disableShrink color='secondary' />}\n                </TableCell>\n                <TableCell align='center' style={{color:'#228B22', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  {allLoaded ? allData['recovered'] : <CircularProgress disableShrink color='secondary' />}\n                </TableCell>\n                <TableCell align='center' style={{color:'#FFFF00', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  {allLoaded ? allData['active'] : <CircularProgress disableShrink color='secondary' />}\n                </TableCell>\n                <TableCell align='center' style={{color:'#A9A9A9', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  {allLoaded ? allData['affectedCountries'] : <CircularProgress disableShrink color='secondary' />}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <br></br><br></br><br></br><br></br>\n        <Typography paragraph variant='h4' style={{color: 'orange', marginBottom: '-5px', fontWeight: 'bold'}}>\n            Country Statistics\n            <FontAwesomeIcon icon={faFlag} size='1x' style={{ marginLeft: '20px' }}></FontAwesomeIcon>\n        </Typography>\n        <br></br>\n        <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n          <TextField \n            id=\"outlined-basic\" \n            label=\"Enter Country Here\" \n            onChange={handleChange} \n            variant=\"outlined\" \n            InputLabelProps={{\n              classes: {\n                root: classes.label,\n                focused: classes.focus,\n              },\n            }}\n            InputProps={{\n              style: {color: '#6495ED'},\n              classes: {\n                root: classes.outlinedInput,\n                focused: classes.focus,\n                notchedOutline: classes.notchedOutline\n              }\n            }} \n          />\n          <Button variant=\"outlined\" color=\"secondary\" type='submit' style={{marginLeft:'25px'}} endIcon={<SearchIcon />}>\n            Search\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"success\">\n              Data Successfully Loaded: {snackCountry.toUpperCase()}\n            </Alert>\n          </Snackbar>\n          <Snackbar open={openError} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n              Error: Data Unable to Load\n            </Alert>\n          </Snackbar>\n          <Snackbar open={openWarning} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"warning\">\n              Country Not Found\n            </Alert>\n          </Snackbar>\n          <Snackbar open={openLoad} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"info\">\n              Data Loading...\n            </Alert>\n          </Snackbar>\n          { loading ? <CircularProgress disableShrink color='secondary' style={{ marginLeft: '25px', marginTop: '6px'}} /> : ''}\n        </form>\n        <br></br>\n        <TableContainer component={Paper} style={{borderColor:'#B0C4DE'}}>\n          <Table style={{border: '1px solid #B0C4DE'}} className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align='center' style={{color:'#B0C4DE', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  Cases\n                </TableCell>\n                <TableCell align='center' style={{color:'#B0C4DE', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  Deaths\n                </TableCell>\n                <TableCell align='center' style={{color:'#B0C4DE', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  Recovered\n                </TableCell>\n                <TableCell align='center' style={{color:'#B0C4DE', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  Active\n                </TableCell>\n                <TableCell align='center' style={{color:'#B0C4DE', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  Cases Today\n                </TableCell>\n                <TableCell align='center' style={{color:'#B0C4DE', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  Deaths Today\n                </TableCell>\n                <TableCell align='center' style={{color:'#B0C4DE', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  Critical Condition\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell align='center' style={{color:'#FFA500', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  {!loading ? countryData['cases'] : ''}\n                </TableCell>\n                <TableCell align='center' style={{color:'red', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  {!loading ? countryData['deaths'] : ''}\n                </TableCell>\n                <TableCell align='center' style={{color:'#228B22', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  {!loading ? countryData['recovered'] : ''}\n                </TableCell>\n                <TableCell align='center' style={{color:'#FFFF00', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  {!loading ? countryData['active'] : ''}\n                </TableCell>\n                <TableCell align='center' style={{color:'#FFA500', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  {!loading ? countryData['todayCases'] : ''}\n                </TableCell>\n                <TableCell align='center' style={{color:'red', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  {!loading ? countryData['todayDeaths'] : ''}\n                </TableCell>\n                <TableCell align='center' style={{color:'#FF6347', border:'1px solid #B0C4DE', fontSize:'18px', fontWeight:'bold'}}>\n                  {!loading ? countryData['critical'] : ''}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </main>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n// Font-Awesome imports\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChartLine } from '@fortawesome/free-solid-svg-icons';\n\n// recharts import\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#424242',\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: '#282c34',\n    padding: theme.spacing(3),\n    height: '100%'\n  },\n  notchedOutline: {\n    borderColor: '#3399ff'\n  },\n  label: {\n    color: '#3399ff',\n    \"&.Mui-focused\": {\n      color: \"#3399ff\"\n    }\n  },\n  focus: {\n    borderColor: '#3399ff',\n  },\n  outlinedInput: {\n    '&$focus $notchedOutline': {\n      borderColor: '#3399ff',\n      color: '#3399ff'\n    },\n    \"&:hover:not($disabled):not($focused):not($error) $notchedOutline\": {\n      borderColor: '#3399ff'\n    }\n  },\n  table: {\n    minWidth: 650,\n    backgroundColor: '#282c34',\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Charts() {\n  const classes = useStyles();\n\n  // hooks\n  const [country, setCountry] = useState('');\n  const [legend, setLegend] = useState('canada');  // country name legend will use\n  const [allData, setAllData] = useState([]);\n  const [cache, setCache] = useState({});  // local cache to store arrays of time series data\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [openError, setOpenError] = useState(false);\n  const [openWarning, setOpenWarning] = useState(false);\n  const [openLoad, setOpenLoad] = useState(false);\n  const [openCountry, setOpenCountry] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n\n  // initial render, fetch all the data\n  useEffect(() => {\n    setOpenLoad(true);\n    setLoading(true);\n    fetch(`/time`)\n      .then(response => response.json())\n      .then(data => {\n        setOpenLoad(false);\n        if (data !== undefined || data !== null) {\n          setCache(data);\n          setAllData(data['canada']);  // have Canada be default (initial) display for charts\n          setLoading(false);\n          setLoaded(true);\n        } else {\n          setLoading(false);\n          setOpenError(true);\n        }\n      })\n      .then(() => setOpen(true))\n      .catch(err => {\n        setLoading(false);\n        setOpenLoad(false);\n        setOpenError(true);\n        // console.log('Error fetching data');\n      });\n  }, []);\n\n  const handleChange = (event) => {\n    let search = event.target.value.toLowerCase();\n    // manually changing search to key names in the time series data object\n    switch (search) {\n      case ('usa'):\n        search = 'us';\n        break;\n      case ('united states'):\n        search = 'us';\n        break;\n      case ('united states of america'):\n        search = 'us';\n        break;\n      case('uk'):\n        search = 'united kingdom';\n        break;\n      case('uae'):\n        search = 'united arab emirates';\n        break;\n      case('korea'):\n        search = 'korea, south';\n        break;\n      case('south korea'):\n        search = 'korea, south';\n        break;\n      case('taiwan'):\n        search = 'taiwan*';\n        break;\n      default:\n        // if not any of cases, no change to search\n    }\n    setCountry(search); // setCountry is asnyc, triggers re-render, use useEffect for render changes\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (cache[country] !== undefined) {\n      // exists in cache - use cached data\n      setAllData(cache[country]);\n      setLegend(country);\n      setOpen(false);\n      setOpenError(false);\n      setOpenLoad(false);\n      setOpenWarning(false);\n      setOpenCountry(true);\n    } else {\n      // console.log('not in cache');\n      setOpen(false);\n      setOpenError(false);\n      setOpenLoad(false);\n      setOpenCountry(false);\n      setOpenWarning(true);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n    setOpenError(false);\n    setOpenWarning(false);\n    setOpenLoad(false);\n    setOpenCountry(false);\n  };\n\n  return (\n    <div>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography paragraph variant='h4' style={{color: 'orange', fontWeight: 'bold', marginBottom: '-5px'}}>\n            Statistics Visualized\n          <FontAwesomeIcon icon={faChartLine} size='1x' style={{ marginLeft: '20px' }}></FontAwesomeIcon>\n        </Typography>\n        <br></br> \n        <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit} style={{marginBottom:'25px'}}>\n          <TextField \n            id=\"outlined-basic\" \n            label=\"Enter Country Here\" \n            onChange={handleChange} \n            variant=\"outlined\" \n            InputLabelProps={{\n              classes: {\n                root: classes.label,\n                focused: classes.focus,\n              },\n            }}\n            InputProps={{\n              style: {color: '#6495ED'},\n              classes: {\n                root: classes.outlinedInput,\n                focused: classes.focus,\n                notchedOutline: classes.notchedOutline\n              }\n            }} \n          />\n          <Button variant=\"outlined\" color=\"secondary\" type='submit' disabled={!loaded} style={{marginLeft:'25px'}} endIcon={<SearchIcon />}>\n            Search\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"success\">\n              Time Series Data Successfully Loaded\n            </Alert>\n          </Snackbar>\n          <Snackbar open={openError} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n              Error: Data Unable to Load\n            </Alert>\n          </Snackbar>\n          <Snackbar open={openWarning} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"warning\">\n              Country Not Found\n            </Alert>\n          </Snackbar>\n          <Snackbar open={openLoad} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"info\">\n              Time Series Data Loading...\n            </Alert>\n          </Snackbar>\n          <Snackbar open={openCountry} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"success\">\n              Country Found: Plotting Data for {legend.toUpperCase()}\n            </Alert>\n          </Snackbar>\n          { loading ? <CircularProgress disableShrink color='secondary' style={{ marginLeft: '25px', marginTop: '6px'}} /> : ''}\n        </form>\n        <br></br>\n        { Object.keys(allData).length !== 0 ? \n          <React.Fragment>\n            <LineChart\n              width={800}\n              height={500}\n              data={allData}\n              style={{marginBottom:'50px'}}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis tick={{fill:'#F8F8FF'}} dataKey=\"date\" />\n              <YAxis tick={{fill:'#F8F8FF'}} />\n              <Tooltip />\n              <Legend verticalAlign='top' formatter={(value, entry, index) => {\n                return <span style={{ color:'#F8F8FF', fontSize:'16px' }}>{value.toUpperCase()} CASES IN {legend.toUpperCase()}</span>}\n              } />\n              <Line type=\"monotone\" dataKey=\"confirmed\" stroke=\"#FFA500\" activeDot={{ r: 5 }} />\n            </LineChart>\n          </React.Fragment>\n        : '' }\n        { Object.keys(allData).length !== 0 ? \n          <React.Fragment>\n            <LineChart\n              width={800}\n              height={500}\n              data={allData}\n              style={{marginBottom:'50px'}}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis tick={{fill:'#F8F8FF'}} dataKey=\"date\" />\n              <YAxis tick={{fill:'#F8F8FF'}} />\n              <Tooltip />\n              <Legend verticalAlign='top' formatter={(value, entry, index) => {\n                return <span style={{ color:'#F8F8FF', fontSize:'16px' }}>{value.toUpperCase()} CASES IN {legend.toUpperCase()}</span>}\n              } />\n              <Line type=\"monotone\" dataKey=\"recovered\" stroke=\"#228B22\" activeDot={{ r: 5 }} />\n            </LineChart>\n          </React.Fragment>\n        : '' }\n        { Object.keys(allData).length !== 0 ? \n          <React.Fragment>\n            <LineChart\n              width={800}\n              height={500}\n              data={allData}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis tick={{fill:'#F8F8FF'}} dataKey=\"date\" />\n              <YAxis tick={{fill:'#F8F8FF'}} />\n              <Tooltip />\n              <Legend verticalAlign='top' formatter={(value, entry, index) => {\n                return <span style={{ color:'#F8F8FF', fontSize:'16px' }}>{value.toUpperCase()} IN {legend.toUpperCase()}</span>}\n              } />\n              <Line type=\"monotone\" dataKey=\"deaths\" stroke=\"red\" activeDot={{ r: 5 }} />\n            </LineChart>\n          </React.Fragment>\n        : '' }\n      </main>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\n// Font-Awesome imports\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faViruses } from '@fortawesome/free-solid-svg-icons';\nimport { faHandsWash } from '@fortawesome/free-solid-svg-icons';\nimport { faUserMd } from '@fortawesome/free-solid-svg-icons';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#424242',\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: '#282c34',\n    padding: theme.spacing(3),\n    height: '100%'\n  },\n}));\n\nexport default function Information() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography paragraph variant='h5' style={{color: '#3399ff'}}>\n          <b>What is COVID-19?\n          <FontAwesomeIcon icon={faViruses} size='2x' style={{ marginLeft: '10px', color: '#8B0000' }}></FontAwesomeIcon></b>\n        </Typography>\n        <Typography paragraph variant='h6' style={{color: '#B0C4DE'}}>\n          COVID-19, also known as Coronavirus, is a highly infectious disease.\n          There is currently no specific vaccine or treatment to this disease.\n          It is important to protect yourself and others from infection through best practices and preventative measures.\n          Staying informed regarding facts about COVID-19 is also very important.\n        </Typography>\n        <br></br>\n        <Typography paragraph variant='h5' style={{color: '#3399ff'}}>\n          <b>Some Best Practices:\n          <FontAwesomeIcon icon={faHandsWash} size='2x' style={{ marginLeft: '10px', color: '#0066cc' }}></FontAwesomeIcon></b>\n        </Typography>\n        <Typography paragraph variant='h6' style={{color: '#B0C4DE'}}>\n          <li style={{marginLeft: '40px'}}>Wash hands with soap frequently</li>\n          <li style={{marginLeft: '40px'}}>Use hand sanitizer</li>\n          <li style={{marginLeft: '40px'}}>Do not touch face</li>\n          <li style={{marginLeft: '40px'}}>Respiratory etiquette (cough into elbow)</li>\n          <li style={{marginLeft: '40px'}}>Social distancing (at least 2m or 6ft apart)</li>\n        </Typography>\n        <br></br>\n        <Typography paragraph variant='h5' style={{color: '#3399ff'}}>\n          <b>Resources and More Information:\n          <FontAwesomeIcon icon={faUserMd} size='2x' style={{ marginLeft: '10px', color: 'green' }}></FontAwesomeIcon></b>\n        </Typography>\n        <Typography paragraph variant='h6' style={{color: '#B0C4DE'}}>\n          <li style={{marginLeft: '40px'}}><a href='https://www.who.int/health-topics/coronavirus' style={{color: '#B0C4DE'}}>World Health Organization</a></li>\n        </Typography>\n      </main>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n// Component imports\nimport Home from './Home';\nimport Cases from './Cases';\nimport Charts from './Charts';\nimport Information from './Information';\n\n// Font awesome icon imports\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLungsVirus } from '@fortawesome/free-solid-svg-icons';\nimport { faShieldVirus } from '@fortawesome/free-solid-svg-icons';\nimport { faHouseUser } from '@fortawesome/free-solid-svg-icons';\nimport { faHospital } from '@fortawesome/free-solid-svg-icons';\nimport { faChartBar } from '@fortawesome/free-solid-svg-icons';\n\n// React Router import\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#252525',\n    borderColor: '#a3a3a3'\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: '#282c34',\n    padding: theme.spacing(3),\n    height: '100%'\n  },\n  dividerColor: {\n    backgroundColor: '#171717'\n  }\n}));\n\nexport default function PermanentDrawerLeft() {\n  const classes = useStyles();\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar} style={{backgroundColor:'#252525'}}>\n          <Toolbar>\n            <Typography variant=\"h3\" noWrap style={{margin: 'auto', color: '#FFD700', fontWeight: 'bold'}}>\n              COVID-19 Live Tracker\n              <FontAwesomeIcon icon={faLungsVirus} style={{marginLeft: '20px'}}></FontAwesomeIcon>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          anchor=\"left\"\n        >\n          <div className={classes.toolbar} />\n          <Divider className={classes.dividerColor} />\n          <List>\n            <Link to='/' style={{ textDecoration: 'none' }}>\n              <ListItem button key='Home'>\n              <FontAwesomeIcon icon={faHouseUser} style={{marginRight: '25px'}} size='2x'></FontAwesomeIcon>\n              <ListItemText primary='Home' />\n              </ListItem>\n            </Link>\n            <Link to='/cases' style={{ textDecoration: 'none' }}>\n              <ListItem button key='Cases'>\n              <FontAwesomeIcon icon={faHospital} style={{marginRight: '28px', marginLeft: '3px'}} size='2x'></FontAwesomeIcon>\n              <ListItemText primary='Cases' />\n              </ListItem>\n            </Link>\n            <Link to='/charts' style={{ textDecoration: 'none' }}>\n              <ListItem button key='Charts'>\n              <FontAwesomeIcon icon={faChartBar} style={{marginRight: '25px', marginLeft: '2px'}} size='2x'></FontAwesomeIcon>\n              <ListItemText primary='Charts' />\n              </ListItem>\n            </Link>\n            <Link to='/information' style={{ textDecoration: 'none' }}>\n              <ListItem button key='Information'>\n              <FontAwesomeIcon icon={faShieldVirus} style={{marginRight: '26px', marginLeft: '2px'}} size='2x'></FontAwesomeIcon>\n              <ListItemText primary='Information' />\n              </ListItem>\n            </Link>\n          </List>\n          <Divider className={classes.dividerColor} />\n        </Drawer>        \n\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/cases\" exact>\n            <Cases />\n          </Route>\n          <Route path=\"/charts\" exact>\n            <Charts />\n          </Route>\n          <Route path=\"/information\" exact>\n            <Information />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}